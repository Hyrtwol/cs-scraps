<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Configuration" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ output extension=".cs" #>
<#
	object val;
	var serviceProvider = this.Host as IServiceProvider;
	var dte = serviceProvider.GetService(typeof(DTE)) as DTE;
	var projItem = dte.Solution.FindProjectItem(this.Host.TemplateFile);
	var project = projItem.ContainingProject;
		
	string customToolNamespace = projItem.Properties.Item("CustomToolNamespace").Value as string;	
	string rootNamespace = project.Properties.Item("RootNamespace").Value.ToString();

	// user settings:
	
	// namespace
	string zmqNamespace = null; 
	if(settings.TryGetValue("Namespace", out val)) { zmqNamespace= (string)val; }
	else if(!string.IsNullOrWhiteSpace(customToolNamespace)) { zmqNamespace=customToolNamespace; }
	else if(!string.IsNullOrWhiteSpace(rootNamespace)) { zmqNamespace=rootNamespace; }
	else { zmqNamespace="ZeroMQ"; }
	
	// class name
	string zmqClassName = settings.TryGetValue("ClassName", out val) ? (string)val : Path.GetFileNameWithoutExtension(this.Host.TemplateFile);
	
	// visibility
	string zmqVisibility = settings.TryGetValue("Visibility", out val) ? (string)val : "internal";
	string zmqEnumVisibility = settings.TryGetValue("EnumVisibility", out val) ? (string)val : zmqVisibility;
	
	// partial
	bool zmqMakePartial = settings.TryGetValue("MakePartial", out val) && (bool)val;
	string zmqPartial = zmqMakePartial ? " partial" : "";	
#>